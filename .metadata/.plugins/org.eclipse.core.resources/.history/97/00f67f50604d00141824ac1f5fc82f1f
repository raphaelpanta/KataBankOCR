package raphaelpantaleao.katabankocr.ui;

import static javax.swing.SwingUtilities.invokeLater;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.io.File;
import java.io.FileInputStream;

import javax.swing.JButton;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

import raphaelpantaleao.katabanckocr.models.Document;

public class UIFrame extends JFrame {

	Document doc;

	public UIFrame(String name, String title) {
		configFrame(name, title);
		add(newLabel("input", "Input:"));

		final JTextArea inputTextArea = createJtextArea("input text area", 3,
				27);

		final JTextArea outputTextArea = new JTextArea("") {
			{
				setName("output text area");
				setRows(1);
				setColumns(9);
				setEditable(false);
			}
		};

		final JButton scannerButton = new JButton("Scan File...") {
			{
				setName("scanner button");
				setEnabled(false);
				addActionListener((event) -> {
					invokeLater(() -> {
						outputTextArea.append(doc.entries());
					});
				});
			}
		};

		final JFileChooser jFileChooser = new JFileChooser() {
			{
				setName("file chooser");
			}
		};

		add(new JButton("Select File...") {
			{
				setName("select file button");
				addActionListener((event) -> {
					invokeLater(() -> {
						int returnOption = jFileChooser.showOpenDialog(this);
						if (returnOption == JFileChooser.APPROVE_OPTION) {
							File file = jFileChooser.getSelectedFile();
							try {
								doc = Document
										.process(new FileInputStream(file));
							} catch (Exception e) {
								throw new RuntimeException(
										"Could not open file", e);
							}
							inputTextArea.append(doc.unprocessedEntries());
							scannerButton.setEnabled(true);
						}
					});
				});
			}
		});

		add(new JScrollPane(inputTextArea));
		add(newLabel("output", "Output"));
		add(scannerButton);
		add(new JScrollPane(outputTextArea));

		pack();
	}

	private void configFrame(String name, String title) {
		setName(name);
		setTitle(title);
		setLayout(new FlowLayout());
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setPreferredSize(new Dimension(350, 300));
	}

	private JTextArea createJtextArea(String name, int rows, int columns) {
		return new JTextArea("") {
			private static final long serialVersionUID = -1872931666294062403L;

			{
				setName(name);
				setRows(rows);
				setColumns(columns);
				setEditable(false);
			}
		};
	}

	private JLabel newLabel(String name, String text) {
		return new JLabel(text) {
			private static final long serialVersionUID = -3111054355912205221L;

			{
				setName(name);
			}
		};
	};
}
