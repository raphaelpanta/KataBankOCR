package raphaelpantaleao.katabankocr.ui;

import static raphaelpantaleao.katabanckocr.builders.JButtonBuilder.newButton;
import static raphaelpantaleao.katabanckocr.builders.JLabelBuilder.newJLabel;
import static raphaelpantaleao.katabanckocr.builders.JTextAreaBuilder.newTextArea;

import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JScrollPane;
import javax.swing.JTextArea;

public class UIFrame extends JFrame {

	private static final String SELECT_FILE_BUTTON = "select file button";
	private static final String SCANNER_BUTTON_TEXT = "Scan File...";
	private static final String SCANNER_BUTTON_NAME = "scanner button";
	private static final long serialVersionUID = 4752440571780079564L;
	private final JTextArea outputTextArea;
	private final JTextArea inputTextArea;

	private final JButton scannerButton = newButton().named(SCANNER_BUTTON_NAME)
			.withText(SCANNER_BUTTON_TEXT).disabled().build();

	private final JButton selectFileButton = newButton()
			.named(SELECT_FILE_BUTTON).withText("Select File...").enabled()
			.build();

	public UIFrame(String name, String title) {
		configFrame(name, title);
		
		inputTextArea = newTextArea().named("input text area").withRows(3)
				.withColumns(27).nonEditable().build();
		outputTextArea = newTextArea().named("output text area").withRows(1)
				.withColumns(9).nonEditable().build();
		
		add(newJLabel().named("input").withText("Input:").build());
		add(selectFileButton);
		add(new JScrollPane(inputTextArea));
		add(newJLabel().named("output").withText("Output:").build());
		add(scannerButton);
		add(new JScrollPane(outputTextArea));

		pack();
	}

	private void configFrame(String name, String title) {
		setName(name);
		setTitle(title);
		setLayout(new FlowLayout());
		setDefaultCloseOperation(EXIT_ON_CLOSE);
		setPreferredSize(new Dimension(350, 300));
	}

	public void addSelectFileListener(ActionListener listener) {
		selectFileButton.addActionListener(listener);
	}

	public void addScanFileListener(ActionListener listener) {
		scannerButton.addActionListener(listener);
	}

	public void appendOutput(String string) {
		outputTextArea.append(string);
	}

	public void appendInput(String string) {
		inputTextArea.append(string);
		scannerButton.setEnabled(true);
	}

}
