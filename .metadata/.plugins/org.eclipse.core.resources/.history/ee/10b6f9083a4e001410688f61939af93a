package raphaelpantaleao.bankocr.tests.unit;

import static org.hamcrest.Matchers.equalTo;
import static org.hamcrest.Matchers.is;
import static org.junit.Assert.assertThat;

import java.io.ByteArrayInputStream;
import java.io.StringReader;
import java.util.Scanner;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

import org.hamcrest.Matchers;
import org.jmock.integration.junit4.JUnit4Mockery;
import org.junit.Assert;
import org.junit.Rule;
import org.junit.Test;

import raphaelpantaleao.bankocr.tests.endtoend.TestConstants;
import raphaelpantaleao.katabanckocr.models.DocumentProcessor;

public class DocumentProcessorTest {

	// @Rule
	// public JUnit4Mockery context = new JUnit4Mockery();
	private final DocumentProcessor docProcessor = new DocumentProcessor();
	private String only27pipesAndUnderscore = "\\[_||]{27}";

	@Test
	public void onlyAcceptWellformedStrings() {
		ByteArrayInputStream byteArrayInputStream = new ByteArrayInputStream(
				TestConstants.ZEROS.getBytes());
		docProcessor.process(byteArrayInputStream);
		String processed = docProcessor.entries();
		assertThat(processed, is(equalTo("000000000\n")));
	}

	private boolean matches(String pattern, String text) {
		Pattern p = Pattern.compile(pattern);
		Matcher m = p.matcher(text);
		return m.matches();
	}

	private void assertLine(String text) {
		Assert.assertTrue("String line should have 27 pipes or scores",
				matches(only27pipesAndUnderscore, text));
	}
}